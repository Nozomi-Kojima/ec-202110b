package com.example.util;

import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.springframework.mock.web.MockHttpSession;

import com.example.domain.Item;
import com.example.domain.Order;
import com.example.domain.OrderItem;
import com.example.domain.OrderTopping;
import com.example.domain.Topping;
import com.example.domain.User;
public class Tanaka_SessionUtil {

	public static MockHttpSession createUserIdAndUserSession() {
		Map<String, Object> sessionMap = new LinkedHashMap<String, Object>();
		User user = new User();
		List<User> userList = new ArrayList<>();
		user.setId(1);
		user.setName("テストユーザ");
		user.setEmail("test@test.co.jp");
		user.setAddress("テスト住所");
		user.setZipcode("111-1111");
		user.setTelephone("テスト電話番号");
		userList.add(user);
		sessionMap.put("userId", user.getId());
		sessionMap.put("user", userList);
		User loginUser = new User();
		List<User> loginUserList = new ArrayList<>();
		loginUser.setId(1);
		loginUser.setName("田中佑奈");
		loginUser.setEmail("tanaka@example.com");
		loginUser.setAddress("東京都新宿区");
		loginUser.setZipcode("111-1111");
		loginUser.setPassword("Tanaka2525");
		loginUser.setTelephone("080-0000-0000");
		loginUser.setPasswordConfirm("Tanaka2525");
		loginUserList.add(loginUser);
		sessionMap.put("user", loginUserList);
		OrderItem orderItem = new OrderItem();
		Item item = new Item();
		item.setId(1);
		item.setName("とんこつラーメン");
		item.setImagePath("1.jpg");
		List<OrderItem> orderItemList = new ArrayList<>();
		orderItem.setId(1);
		orderItem.setItemId(1);
		orderItem.setOrderId(1);
		orderItem.setQuantity(1);
		orderItem.setSize('M');
		orderItem.setItem(item);
		orderItemList.add(orderItem);
		sessionMap.put("orderItemList", orderItemList);
		List<Integer> subTotalList = new ArrayList<>();
		subTotalList.add(1000);
		subTotalList.add(2000);
		subTotalList.add(3000);
		sessionMap.put("subTotalList", subTotalList);
		Integer totalPrice = 6000;
		sessionMap.put("totalPrice", totalPrice);
		List<Integer> yearList = new ArrayList<>();
		yearList.add(2011);
		yearList.add(2013);
		yearList.add(2018);
		List<Integer> monthList = new ArrayList<>();
		monthList.add(1);
		monthList.add(2);
		monthList.add(3);
		return createMockHttpSession(sessionMap);
	}

	public static MockHttpSession Kojima_OrderSession() {
		Map<String, Object> sessionMap = new LinkedHashMap<String, Object>();
		User user = new User();
		List<User> userList = new ArrayList<>();
		user.setId(1);
		user.setName("田中佑奈");
		user.setEmail("tanaka@example.com");
		user.setPassword("Tanaka2525");
		user.setPasswordConfirm("Tanaka2525");
		user.setAddress("東京都新宿区");
		user.setZipcode("111-1111");
		user.setTelephone("080-0000-0000");
		user.setId(2);
		user.setName("テストユーザ");
		user.setEmail("test@test.co.jp");
		user.setPassword("$2a$10$Utoo6nr3XIFEh4xOZ9Zr1.n/PtEYBb8HhlLDDklaJwsj.T3uux4kq");
		user.setPasswordConfirm("$2a$10$Utoo6nr3XIFEh4xOZ9Zr1.n/PtEYBb8HhlLDDklaJwsj.T3uux4kq");
		user.setAddress("東京都新宿区");
		user.setZipcode("111-1111");
		user.setTelephone("080-0000-0000");
		userList.add(user);
		sessionMap.put("userId", user.getId());
		sessionMap.put("user", userList);
		User loginUser = new User();
		List<User> loginUserList = new ArrayList<>();
		loginUser.setId(1);
		loginUser.setName("田中佑奈");
		loginUser.setEmail("tanaka@example.com");
		loginUser.setAddress("東京都新宿区");
		loginUser.setZipcode("111-1111");
		loginUser.setPassword("1111111");
		loginUser.setTelephone("080-0000-0000");
		loginUser.setPasswordConfirm("Tanaka2525");
		loginUser.setId(2);
		loginUser.setName("テストユーザ");
		loginUser.setEmail("test@test.co.jp");
		loginUser.setAddress("東京都新宿区");
		loginUser.setZipcode("111-1111");
		loginUser.setPassword("$2a$10$Utoo6nr3XIFEh4xOZ9Zr1.n/PtEYBb8HhlLDDklaJwsj.T3uux4kq");
		loginUser.setTelephone("080-0000-0000");
		loginUser.setPasswordConfirm("$2a$10$Utoo6nr3XIFEh4xOZ9Zr1.n/PtEYBb8HhlLDDklaJwsj.T3uux4kq");
		loginUserList.add(loginUser);
		sessionMap.put("user", loginUserList);
		Topping topping = new Topping();
		topping.setId(1);
		topping.setName("チャーシュー");
		topping.setPriceL(300);
		topping.setPriceM(200);
		topping.setId(2);
		topping.setName("煮たまご");
		topping.setPriceL(300);
		topping.setPriceM(200);
		OrderTopping toppingItem = new OrderTopping();
		List<OrderTopping>orderToppingList = new ArrayList<>();
		toppingItem.setOrderItemId(1);
		toppingItem.setToppingId(1);
		toppingItem.setId(1);
		toppingItem.setOrderItemId(2);
		toppingItem.setToppingId(2);
		toppingItem.setTopping(topping);
		orderToppingList.add(toppingItem);
		sessionMap.put("orderToppingList", orderToppingList);
		OrderItem orderItem = new OrderItem();
		Item item = new Item();
		item.setId(1);
		item.setName("とんこつラーメン");
		item.setImagePath("1.jpg");
		item.setPriceM(700);
		item.setPriceL(800);
		item.setId(2);
		item.setName("赤ラーメン");
		item.setImagePath("2.jpg");
		item.setPriceM(750);
		item.setPriceL(850);
		List<OrderItem> orderItemList = new ArrayList<>();
		orderItem.setId(1);
		orderItem.setItemId(1);
		orderItem.setOrderId(1);
		orderItem.setQuantity(1);
		orderItem.setSize('M');
		orderItem.setId(2);
		orderItem.setItemId(2);
		orderItem.setOrderId(2);
		orderItem.setQuantity(2);
		orderItem.setSize('L');
		orderItem.setOrderToppingList(orderToppingList);
		orderItem.setItem(item);
		orderItemList.add(orderItem);
		sessionMap.put("orderItemList", orderItemList);
		List<Integer> subTotalList = new ArrayList<>();
		subTotalList.add(700);
		subTotalList.add(850);
		sessionMap.put("subTotalList", subTotalList);
		Integer totalPrice = 6000;
		sessionMap.put("totalPrice", totalPrice);
		return createMockHttpSession(sessionMap);
	}
	

	private static MockHttpSession createMockHttpSession(Map<String, Object> sessions) {
		MockHttpSession mockHttpSession = new MockHttpSession();
		for (Map.Entry<String, Object> session : sessions.entrySet()) {
			mockHttpSession.setAttribute(session.getKey(), session.getValue());
		}
		return mockHttpSession;
	}
}
	